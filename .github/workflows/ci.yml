name: CI

on:
  push:
    branches: [ main, develop ]
  pull_request:
    branches: [ main, develop ]

jobs:
  test:
    name: Unit & Integration Tests
    runs-on: ubuntu-latest

    steps:
    - uses: actions/checkout@v4

    - name: Set up Go
      uses: actions/setup-go@v5
      with:
        go-version: '1.25'

    - name: Cache Go modules
      uses: actions/cache@v4
      with:
        path: ~/go/pkg/mod
        key: ${{ runner.os }}-go-${{ hashFiles('**/go.sum') }}
        restore-keys: |
          ${{ runner.os }}-go-

    - name: Download dependencies
      run: go mod download

    - name: Run unit tests
      run: go test ./internal/... -v -cover -coverprofile=coverage.out

    - name: Upload coverage to Codecov
      uses: codecov/codecov-action@v4
      with:
        file: ./coverage.out
        flags: unittests

    - name: Run integration tests
      run: go test -tags=integration ./test/integration/... -v -timeout 60s

  build:
    name: Build Binaries
    runs-on: ubuntu-latest
    needs: test

    steps:
    - uses: actions/checkout@v4

    - name: Set up Go
      uses: actions/setup-go@v5
      with:
        go-version: '1.25'

    - name: Build standard binary
      run: go build -o bin/blandmockapi ./cmd/server

    - name: Build Lambda binary
      run: |
        GOOS=linux GOARCH=amd64 CGO_ENABLED=0 go build \
          -tags lambda \
          -ldflags="-w -s" \
          -o bin/bootstrap \
          ./cmd/server

    - name: Upload artifacts
      uses: actions/upload-artifact@v4
      with:
        name: binaries
        path: bin/

  docker:
    name: Build Docker Images
    runs-on: ubuntu-latest
    needs: test

    steps:
    - uses: actions/checkout@v4

    - name: Set up Docker Buildx
      uses: docker/setup-buildx-action@v3

    - name: Build standard Docker image
      run: docker build -t blandmockapi:latest .

    - name: Build Lambda Docker image
      run: docker build -f Dockerfile.lambda -t blandmockapi:lambda .

    - name: Test Docker image
      run: |
        docker run -d --name test-api -p 8080:8080 blandmockapi:latest
        sleep 5
        curl -f http://localhost:8080/health || exit 1
        docker stop test-api

  lint:
    name: Lint
    runs-on: ubuntu-latest

    steps:
    - uses: actions/checkout@v4

    - name: Set up Go
      uses: actions/setup-go@v5
      with:
        go-version: '1.25'

    - name: golangci-lint
      uses: golangci/golangci-lint-action@v4
      with:
        version: latest
